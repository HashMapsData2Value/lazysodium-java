/*
 * Copyright (c) Terl Tech Ltd • 17/07/18 23:21 • goterl.com
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, you can obtain one at http://mozilla.org/MPL/2.0/.
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import com.goterl.lazycode.lazysodium.interfaces.Stream;
import junit.framework.TestCase;
import org.junit.Test;

public class StreamTest extends BaseTest {

    private String message1 = "A top secret message.";

    @Test
    public void chacha20() {
        byte[] c = new byte[32];
        int cLen = c.length;
        byte[] nonce = lazySodium.nonce(Stream.CHACHA20_NONCEBYTES);
        byte[] key = "RANDOM_KEY_OF_32_BYTES_LENGTH121".getBytes();

        lazySodium.cryptoStreamChaCha20(c, cLen, nonce, key);

        // Encrypt
        byte[] mBytes = message1.getBytes();
        byte[] cipher = new byte[mBytes.length];
        lazySodium.cryptoStreamChaCha20Xor(cipher, mBytes, mBytes.length, nonce, key);

        // Decrypt
        byte[] result = new byte[mBytes.length];
        lazySodium.cryptoStreamChaCha20Xor(result, cipher, cipher.length, nonce, key);

        TestCase.assertEquals(message1, lazySodium.str(result));
    }




}
